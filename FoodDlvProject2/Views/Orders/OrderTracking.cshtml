@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<FoodDlvProject2.Models.ViewModels.OrderTrackingVM>

@{
	ViewBag.Title = "OrderTracking";

	var keyWord = ViewBag.KeyWord as string;
	var searchItem = ViewBag.SearchItem as IEnumerable<SelectListItem>;
	var pageSize = ViewBag.PageSize;
}

@section Customize {
	<link href="~/css/orders/ordertracking-orderschedule.css" rel="stylesheet" />
  }

<div class="container-fluid">
	<h1>訂單查詢</h1>
	<form method="get">
		<div class="card mb-4 py-3">
			<div class="card-body">
				<!--條件搜尋:時間範圍-->
				<div class="row">
					<div class="col-12 col-lg-2 col-xxl-1 pt-1">
						訂單時間:
					</div>
					<!--起始時間-->
					<div class="col-12 col-sm-4 col-xl-2">
						<input type="datetime-local"
							   name="dateStart"
							   class="form-control" />
					</div>
					<!--結束時間-->
					<div class="col-12 col-sm-4 col-xl-2">
						<input type="datetime-local"
							   name="dateEnd"
							   class="form-control" />
					</div>
				</div>
				<!--條件搜尋:關鍵字-->
				<div class="row">
					<div class="col-12 col-lg-2 col-xxl-1 pt-1 mt-3">
						關鍵字搜尋:
					</div>
					<!--欄位選擇-->
					<div class="col-12 col-sm-8 col-xl-2 mt-3">
						@Html.DropDownList("searchItem", ViewBag.SearchItem as IEnumerable<SelectListItem>, new{@class="form-control"})
					</div>
					<!--關鍵字輸入-->
					<div class="col-12 col-sm-8 col-xl-2 mt-3">
						<input type="text"
							   name="keyWord"
							   class="form-control"
							   value="@keyWord" />
					</div>
					<!--執行搜尋功能-->
					<div class="col-1 text-center mt-3">
						<input type="submit"
							   class="btn btn-primary"
							   value="Search" />
					</div>
				</div>
			</div>
		</div>
	</form>
	<!--訂單查詢表單-->
	<div class="card shadow mb-4">
		<div class="card-body">
			<div class="table-responsive">
				<table class="table table-bordered table-hover"
					   id="datatable"
					   width="100%"
					   cellspacing="0">
					<!--欄位名稱-->
					<thead>
						<tr>
							<th>訂單編號</th>
							<th>訂單成立時間</th>
							<th>會員姓名</th>
							<th>商家名稱</th>
							<th>外送費</th>
							<th>訂單總價</th>
							<th>訂單狀態</th>
						</tr>
					</thead>
					<!--欄位資料-->
					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td>@Html.DisplayFor(modelItem => item.Id)</td>
								<td>@Html.DisplayFor(modelItem => item.OrderTime)</td>
								<td>@Html.DisplayFor(modelItem => item.MemberName)</td>
								<td>@Html.DisplayFor(modelItem => item.StoreName)</td>
								<td>@Html.DisplayFor(modelItem => item.DeliveryFee)</td>
								<td>@Html.DisplayFor(modelItem => item.Total)</td>
								<td>
									<!--根據訂單狀態顯示相對應的button顏色-->
									@{
										string status = item.OrderStatus;
										string btnColor = "";
										switch (status)
										{
											case "訂單建立":
												btnColor = "btn-primary";
												break;
											case "餐點準備中":
												btnColor = "btn-secondary";
												break;
											case "餐點完成":
												btnColor = "btn-success";
												break;
											case "配送中":
												btnColor = "btn-warning";
												break;
											case "配送到達":
												btnColor = "btn-danger";
												break;
											case "訂單完成":
												btnColor = "btn-info";
												break;
										}
										//賦予訂單狀態button屬性與collapse功能
										//讓collapse帶入OrderId的值, 使其顯示相對應的OrderSchedule partial view
										<button class="btn @btnColor status"
											type="button"
											data-toggle="collapse"
											data-target="#collapse-@item.Id"
											aria-expanded="false"
											aria-controls="collapse-@item.Id"
											orderId="@item.Id">
											@status
										</button>
									}
								</td>
							</tr>
							<tr>
								<!--顯示OrderSchedule partial view-->
								<td colspan="7">
									<div id="collapse-@item.Id" class="collapse container">
										<div class="scheduleInfo"></div>
										<div class="steps">
											<div>
												<div class="schedule active">1</div>
												<div id="status1"></div>
											</div>
											<div>
												<div class="schedule">2</div>
												<div id="status2"></div>
											</div>
											<div>
												<div class="schedule">3</div>
												<div id="status3"></div>
											</div>
											<div>
												<div class="schedule">4</div>
												<div id="status4"></div>
											</div>
											<div>
												<div class="schedule">5</div>
												<div id="status5"></div>
											</div>
											<div>
												<div class="schedule">6</div>
												<div id="status6"></div>
											</div>
											<div class="progress-bar">
												<span class="indicator"></span>
											</div>
										</div>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<!--分頁功能-->
	@Html.PagedListPager((IPagedList<FoodDlvProject2.Models.ViewModels.OrderTrackingVM>)Model,
	page => Url.Action("OrderTracking", new { pageNumber = page }),
	new PagedListRenderOptions {
	LiElementClasses = new string[] { "page-item" },
	PageClasses = new string[] { "page-link" }
	})
</div>

@section scripts {
	<script>
		//Fields
		let scheduleData;
		
		//呼叫Action OrderSchedule, 輸入id取得相對應的json
		//使用class選擇器選擇.status, 注入click事件, 資料來源使用id控制
		$(".status").on("click", function () {
			let id = $(this).attr("orderId");
			$.ajax({
				type: "GET",
				url: `https://localhost:7046/Orders/OrderSchedule?id=${id}`
			}).done(function (data) {
				scheduleData = data;
				setScheduleData(id);
			}).fail(function (error) {
				alert(error.statusText)
			});
		});
		
		//function:把json資料呈現在html
		function setScheduleData(id){
			let htmlstring = "";
			for (let i = 0; i < scheduleData.length; i++) {
				let statusData = document.querySelector(`#collapse-${id} #status${i + 1}`);					
				let template =
					`
						<div>${scheduleData[i].scheduleStatus.status}</div>
						<div>${scheduleData[i].scheduleStatus.markTime}</div>
					`;
				htmlstring = template;
				statusData.innerHTML = htmlstring;
			}					
		}				
	</script>
}



